const fs = require("fs").promises;
const path = require("path");

const outputDir = __dirname; // Save in the same directory as the script

// Minimal 1x1 pixel transparent PNG (67 bytes)
// This is a standard, widely recognized minimal PNG.
const minimalPngBuffer = Buffer.from([
  0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a, 0x00, 0x00, 0x00, 0x0d, 0x49,
  0x48, 0x44, 0x52, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x08, 0x06,
  0x00, 0x00, 0x00, 0x1f, 0x15, 0xc4, 0x89, 0x00, 0x00, 0x00, 0x0a, 0x49, 0x44,
  0x41, 0x54, 0x78, 0x9c, 0x63, 0x00, 0x01, 0x00, 0x00, 0x05, 0x00, 0x01, 0x0d,
  0x0a, 0x2d, 0xb4, 0x00, 0x00, 0x00, 0x00, 0x49, 0x45, 0x4e, 0x44, 0xae, 0x42,
  0x60, 0x82,
]);

// Minimal 1x1 pixel black JPEG (125 bytes)
// This is a grayscale 1x1 pixel JPEG.
const minimalJpgBuffer = Buffer.from([
  0xff, 0xd8, 0xff, 0xe0, 0x00, 0x10, 0x4a, 0x46, 0x49, 0x46, 0x00, 0x01, 0x01,
  0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x00, 0xff, 0xdb, 0x00, 0x43, 0x00, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc2, 0x00,
  0x0b, 0x08, 0x00, 0x01, 0x00, 0x01, 0x01, 0x01, 0x11, 0x00, 0xff, 0xc4, 0x00,
  0x14, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xda, 0x00, 0x08, 0x01, 0x01, 0x00, 0x00,
  0x3f, 0x00, 0x00, 0xff, 0xd9,
]);

async function generateMinimalImage(filename, buffer) {
  const filepath = path.join(outputDir, filename);
  console.log(`Attempting to generate minimal ${filename}...`);
  try {
    await fs.writeFile(filepath, buffer);
    console.log(`Successfully generated and saved: ${filepath}`);
    return true;
  } catch (error) {
    console.error(`Error generating ${filename}:`, error);
    return false;
  }
}

async function main() {
  console.log("Starting minimal test image generation...");

  const pngGenerated = await generateMinimalImage(
    "test_clean.png",
    minimalPngBuffer,
  );
  const jpgGenerated = await generateMinimalImage(
    "test_clean.jpg",
    minimalJpgBuffer,
  );

  if (jpgGenerated && pngGenerated) {
    console.log(
      "\nMinimal test images generated. You can now try sending 'test_clean.jpg' and 'test_clean.png' to your API.",
    );
    console.log(
      "Note: These are 1x1 pixel images, intended purely for testing decoder compatibility.",
    );
  } else {
    console.error(
      "\nOne or more minimal test images could not be generated. Please check the errors above.",
    );
  }
}

main();
